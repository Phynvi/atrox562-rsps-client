/* RuntimeException_Sub1 - Decompiled by JODE
 * Visit http://jode.sourceforge.net/
 */
import java.math.BigInteger;

public class RuntimeException_Sub1 extends RuntimeException
{
    public static int[] anIntArray3233
	= { 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	    99, 99, 99, 99, 99, 99, 99, 99 };
    public static int anInt3234;
    public static int anInt3235;
    public static short[][] aShortArrayArray3236
	= { { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454,
	      6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556,
	      10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012,
	      -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146,
	      -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522,
	      542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150,
	      -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70,
	      90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358,
	      2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646,
	      15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030,
	      31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752,
	      -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794,
	      6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898,
	      -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310,
	      684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752,
	      10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040,
	      19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296,
	      -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652,
	      -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038,
	      14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986,
	      -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940,
	      960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944,
	      10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160,
	      -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892,
	      -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858,
	      -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006,
	      21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898 },
	    { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454,
	      6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556,
	      10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012,
	      -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146,
	      -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522,
	      542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150,
	      -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70,
	      90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358,
	      2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646,
	      15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030,
	      31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752,
	      -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794,
	      6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898,
	      -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310,
	      684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752,
	      10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040,
	      19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296,
	      -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652,
	      -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038,
	      14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986,
	      -12918, -12898, 10347, 10582, 10429, 10407, 10359, 8414, 9540,
	      10456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
	    { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454,
	      6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556,
	      10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012,
	      -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146,
	      -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522,
	      542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150,
	      -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70,
	      90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358,
	      2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646,
	      15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030,
	      31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752,
	      -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794,
	      6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898,
	      -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310,
	      684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752,
	      10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040,
	      19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296,
	      -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652,
	      -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038,
	      14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986,
	      -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940,
	      960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944,
	      10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160,
	      -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892,
	      -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858,
	      -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006,
	      21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898 },
	    { 4300, 3294, 3303, 3264, 4506, 4382, 4387, 5293, 7622, 7384, 8412,
	      7496, 86, 123, 111, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 30, 50, 70, 90, 110, 310,
	      684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752,
	      10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040,
	      19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296,
	      -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652,
	      -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038,
	      14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986,
	      -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940,
	      960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944,
	      10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160,
	      -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892,
	      -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858,
	      -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006,
	      21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898,
	      13766, 13745, 13726, 13890, 13743, 13852, 17602, 18605, 21660,
	      24000, 24997, 24088, 27972, 25903, 26904, 27193, 27175, 27156,
	      30020, 28975, 29976, 12482, 13485, 10392, 10692, 10669, 10776,
	      6717, 6695, 7830, 6971, 6951, 5910, 3389, 3369, 3356, 0, 0, 0, 0,
	      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	      0, 0 },
	    { 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940, 960, 6454,
	      6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944, 10310, 10556,
	      10576, 14646, 15020, 15040, 19766, 20140, 20160, -29386, -29012,
	      -28992, 31030, 31276, 31296, -24266, -23892, -23872, -19146,
	      -18772, -18752, -14026, -13652, -13632, -6858, -6484, -6464, 522,
	      542, 6794, 6814, 11018, 11038, 14986, 15006, 21130, 21150,
	      -28918, -28898, -22006, -21986, -12918, -12898, 10, 30, 50, 70,
	      90, 110, 310, 684, 704, 556, 940, 960, 6454, 6952, 6972, 2358,
	      2732, 2752, 10550, 10924, 10944, 10310, 10556, 10576, 14646,
	      15020, 15040, 19766, 20140, 20160, -29386, -29012, -28992, 31030,
	      31276, 31296, -24266, -23892, -23872, -19146, -18772, -18752,
	      -14026, -13652, -13632, -6858, -6484, -6464, 522, 542, 6794,
	      6814, 11018, 11038, 14986, 15006, 21130, 21150, -28918, -28898,
	      -22006, -21986, -12918, -12898, 10, 30, 50, 70, 90, 110, 310,
	      684, 704, 556, 940, 960, 6454, 6952, 6972, 2358, 2732, 2752,
	      10550, 10924, 10944, 10310, 10556, 10576, 14646, 15020, 15040,
	      19766, 20140, 20160, -29386, -29012, -28992, 31030, 31276, 31296,
	      -24266, -23892, -23872, -19146, -18772, -18752, -14026, -13652,
	      -13632, -6858, -6484, -6464, 522, 542, 6794, 6814, 11018, 11038,
	      14986, 15006, 21130, 21150, -28918, -28898, -22006, -21986,
	      -12918, -12898, 10, 30, 50, 70, 90, 110, 310, 684, 704, 556, 940,
	      960, 6454, 6952, 6972, 2358, 2732, 2752, 10550, 10924, 10944,
	      10310, 10556, 10576, 14646, 15020, 15040, 19766, 20140, 20160,
	      -29386, -29012, -28992, 31030, 31276, 31296, -24266, -23892,
	      -23872, -19146, -18772, -18752, -14026, -13652, -13632, -6858,
	      -6484, -6464, 522, 542, 6794, 6814, 11018, 11038, 14986, 15006,
	      21130, 21150, -28918, -28898, -22006, -21986, -12918, -12898 } };
    public Throwable aThrowable3237;
    public static HashMap aClass214_3238;
    public static int anInt3239;
    public static int anInt3240;
    public static int anInt3241;
    public static int anInt3242;
    public static int anInt3243 = 0;
    public static int anInt3244;
    public String aString3245;
    public static BigInteger aBigInteger3246;
    public static volatile long aLong3247;
    
    public static void method2831(int arg0) {
	try {
	    anInt3234++;
	    synchronized (Class131_Sub41_Sub5.aClass214_6226) {
		Class131_Sub41_Sub5.aClass214_6226.method2783(arg0 + -15116);
		if (arg0 != 15020)
		    method2834(true, 110, -60);
	    }
	} catch (RuntimeException runtimeexception) {
	    throw Class131_Sub2_Sub6.method1495(runtimeexception,
						"tr.E(" + arg0 + ')');
	}
    }
    
    public static void method2832(int arg0, int arg1) {
	try {
	    anInt3235++;
	    if ((arg0 ^ 0xffffffff) != 0 && Class67.aBooleanArray913[arg0]) {
		if (arg1 != 0)
		    aLong3247 = -8L;
		Class150.aClass158_1994.method2344(arg0, 0);
		if (Class131_Sub2_Sub9.iComponentsDefinitions[arg0] != null) {
		    boolean bool = true;
		    for (int i = 0; ((Class131_Sub2_Sub9
				      .iComponentsDefinitions[arg0]).length
				     > i); i++) {
			if (Class131_Sub2_Sub9.iComponentsDefinitions[arg0][i]
			    != null) {
			    if ((Class131_Sub2_Sub9.iComponentsDefinitions
				 [arg0][i].anInt2470)
				!= 2)
				Class131_Sub2_Sub9.iComponentsDefinitions
				    [arg0][i]
				    = null;
			    else
				bool = false;
			}
		    }
		    if (bool)
			Class131_Sub2_Sub9.iComponentsDefinitions[arg0]
			    = null;
		    Class67.aBooleanArray913[arg0] = false;
		}
	    }
	} catch (RuntimeException runtimeexception) {
	    throw Class131_Sub2_Sub6.method1495(runtimeexception,
						("tr.F(" + arg0 + ',' + arg1
						 + ')'));
	}
    }
    
    public static int method2833(int arg0, int arg1, int arg2, int arg3) {
	try {
	    anInt3241++;
	    if (Class75.aClass68Array1023 == null)
		return 0;
	    int i = arg2 >> 2121884103;
	    int i_0_ = 83 % ((arg1 - 45) / 48);
	    int i_1_ = arg0 >> -101680409;
	    if (i < 0 || i_1_ < 0
		|| -1 + Class131_Sub41_Sub11_Sub1.map_sizeX < i
		|| i_1_ > Class131_Sub2_Sub26.mapSizeY + -1)
		return 0;
	    int i_2_ = arg3;
	    if ((i_2_ ^ 0xffffffff) > -4
		&& ((0x2
		     & Class23_Sub2_Sub1.aByteArrayArrayArray4992[1][i][i_1_])
		    != 0))
		i_2_++;
	    return Class75.aClass68Array1023[i_2_].method720(arg2, arg0);
	} catch (RuntimeException runtimeexception) {
	    throw Class131_Sub2_Sub6.method1495(runtimeexception,
						("tr.A(" + arg0 + ',' + arg1
						 + ',' + arg2 + ',' + arg3
						 + ')'));
	}
    }
    
    public static Class19 method2834(boolean arg0, int arg1, int arg2) {
	try {
	    anInt3242++;
	    Class19 class19 = new Class19();
	    class19.anInt218 = -1;
	    class19.anInt206 = -1;
	    class19.anInt214 = 1 + arg1 - -5;
	    class19.anInt196 = 1 + arg2 + 5;
	    class19.clipping
		= new int[class19.anInt214][class19.anInt196];
	    class19.method253((byte) -107);
	    if (arg0 != false)
		method2834(true, 79, -68);
	    return class19;
	} catch (RuntimeException runtimeexception) {
	    throw Class131_Sub2_Sub6.method1495(runtimeexception,
						("tr.B(" + arg0 + ',' + arg1
						 + ',' + arg2 + ')'));
	}
    }
    
    public static void method2835(byte arg0) {
	try {
	    aBigInteger3246 = null;
	    aShortArrayArray3236 = null;
	    aClass214_3238 = null;
	    if (arg0 != -66)
		anIntArray3233 = null;
	    anIntArray3233 = null;
	} catch (RuntimeException runtimeexception) {
	    throw runtimeexception;
	}
    }
    
    public static void method2836(boolean arg0, Toolkit arg1, int arg2,
				  Class119 arg3, int arg4) {
	try {
	    anInt3244++;
	    Class74.aClass119_1011.method1012(0);
	    if (!Class135.aBoolean1816) {
		if (arg0 != true)
		    aBigInteger3246 = null;
		for (Class131_Sub20 class131_sub20
			 = (Class131_Sub20) arg3.method1007(0);
		     class131_sub20 != null;
		     class131_sub20 = (Class131_Sub20) arg3.method1014(0)) {
		    Class94 class94
			= Class131_Sub2_Sub32
			      .method1626(class131_sub20.anInt4427, (byte) 1);
		    if (ContainersInformation.method2824(class94, -1225)) {
			boolean bool
			    = Class53.method602(class94, arg1, arg4,
						class131_sub20, -155, arg2);
			if (bool)
			    Class126.method1106(arg1, -1, class94,
						class131_sub20);
		    }
		}
	    }
	} catch (RuntimeException runtimeexception) {
	    throw Class131_Sub2_Sub6.method1495(runtimeexception,
						("tr.G(" + arg0 + ','
						 + (arg1 != null ? "{...}"
						    : "null")
						 + ',' + arg2 + ','
						 + (arg3 != null ? "{...}"
						    : "null")
						 + ',' + arg4 + ')'));
	}
    }
    
    public static void method2837(int arg0, boolean arg1, int arg2, int arg3,
				  int arg4) {
	try {
	    if (Stream.anInt4299 != 0) {
		Class1_Sub7.anInt3583 = Stream.anInt4299;
		Class131_Sub2_Sub38.method1644(0, 127);
	    } else
		Class199.method2711(0, false);
	    anInt3240++;
	    Class148.aBoolean1981 = arg1;
	    PacketStream.anInt6135 = arg2;
	    Class131_Sub41_Sub3.anInt6193 = arg0;
	    Class127.method1131(arg4);
	    int i = 72 % ((arg3 - -10) / 59);
	} catch (RuntimeException runtimeexception) {
	    throw Class131_Sub2_Sub6.method1495(runtimeexception,
						("tr.D(" + arg0 + ',' + arg1
						 + ',' + arg2 + ',' + arg3
						 + ',' + arg4 + ')'));
	}
    }
    
    public static void method2838(int[] arg0, long[] arg1, int arg2) {
	try {
	    Class105.method913(92, arg0, arg1.length - 1, arg1, 0);
	    if (arg2 > -35)
		method2837(-112, false, -80, -90, -88);
	    anInt3239++;
	} catch (RuntimeException runtimeexception) {
	    throw Class131_Sub2_Sub6.method1495(runtimeexception,
						("tr.C("
						 + (arg0 != null ? "{...}"
						    : "null")
						 + ','
						 + (arg1 != null ? "{...}"
						    : "null")
						 + ',' + arg2 + ')'));
	}
    }
    
    public RuntimeException_Sub1(Throwable arg0, String arg1) {
	try {
	    aString3245 = arg1;
	    aThrowable3237 = arg0;
	} catch (RuntimeException runtimeexception) {
	    throw runtimeexception;
	}
    }
    
    static {
	aClass214_3238 = new HashMap(10);
	aBigInteger3246
	    = (new BigInteger
	       ("7162900525229798032761816791230527296329313291232324290237849263501208207972894053929065636522363163621000728841182238772712427862772219676577293600221789"));
	aLong3247 = 0L;
    }
}
